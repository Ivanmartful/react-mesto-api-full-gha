{"ast":null,"code":"class Api {\n  constructor(basePath, token) {\n    this._basePath = basePath;\n    this._token = token;\n  }\n  _getheaders() {\n    return {\n      \"Content-type\": \"application/json\",\n      authorization: this._token\n    };\n  }\n  _getJson(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getCards() {\n    return fetch(`${this._basePath}/cards`, {\n      headers: this._getheaders()\n    }).then(this._getJson);\n  }\n  createCard(item) {\n    return fetch(`${this._basePath}/cards`, {\n      method: 'POST',\n      headers: this._getheaders(),\n      body: JSON.stringify(item)\n    }).then(this._getJson);\n  }\n  getCurrentUser() {\n    return fetch(`${this._basePath}/users/me`, {\n      method: 'GET',\n      headers: this._getheaders()\n    }).then(this._getJson);\n  }\n  deleteCard(id) {\n    return fetch(`${this._basePath}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._getheaders()\n    }).then(this._getJson);\n  }\n  editUserInfo(_ref) {\n    let {\n      name,\n      about\n    } = _ref;\n    return fetch(`${this._basePath}/users/me`, {\n      method: 'PATCH',\n      headers: this._getheaders(),\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(this._getJson);\n  }\n  like(id) {\n    return fetch(`${this._basePath}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._getheaders()\n    }).then(this._getJson);\n  }\n  deleteLike(id) {\n    return fetch(`${this._basePath}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._getheaders()\n    }).then(this._getJson);\n  }\n  updateAvatar(_ref2) {\n    let {\n      avatar\n    } = _ref2;\n    return fetch(`${this._basePath}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._getheaders(),\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }).then(this._getJson);\n  }\n}\nconst api = new Api('https://mesto.nomoreparties.co/v1/cohort-61', '3e94a288-591a-4578-ae34-fb38b084d81f');\nexport default api;","map":{"version":3,"names":["Api","constructor","basePath","token","_basePath","_token","_getheaders","authorization","_getJson","res","ok","json","Promise","reject","status","getCards","fetch","headers","then","createCard","item","method","body","JSON","stringify","getCurrentUser","deleteCard","id","editUserInfo","_ref","name","about","like","deleteLike","updateAvatar","_ref2","avatar","api"],"sources":["/Users/ivan/dev/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["class Api {\n    constructor(basePath, token) {\n        this._basePath = basePath;\n        this._token = token;\n    }\n\n    _getheaders() {\n        return  {\n            \"Content-type\": \"application/json\",\n            authorization: this._token,\n        };\n    }\n\n    _getJson(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getCards() {\n        return fetch(`${this._basePath}/cards`, {\n            headers: this._getheaders(),\n        }).then(this._getJson);\n    }\n\n    createCard(item) {\n        return fetch(`${this._basePath}/cards`, {\n            method: 'POST',\n            headers: this._getheaders(),\n            body: JSON.stringify(item),\n        }).then(this._getJson);\n    }\n\n    getCurrentUser() {\n        return fetch(`${this._basePath}/users/me`, {\n            method: 'GET',\n            headers: this._getheaders(),\n        }).then(this._getJson);\n    }\n\n    deleteCard(id) {\n        return fetch(`${this._basePath}/cards/${id}`, {\n            method: 'DELETE',\n            headers: this._getheaders(),\n        }).then(this._getJson);\n    }\n\n    editUserInfo({name, about}) {\n        return fetch(`${this._basePath}/users/me`, {\n            method: 'PATCH',\n            headers: this._getheaders(),\n            body: JSON.stringify({\n                name: name,\n                about: about,\n            }),\n        }).then(this._getJson);\n    }\n\n    like(id) {\n        return fetch(`${this._basePath}/cards/${id}/likes`, {\n            method: 'PUT',\n            headers: this._getheaders(),\n        }).then(this._getJson);\n    }\n\n    deleteLike(id) {\n        return fetch(`${this._basePath}/cards/${id}/likes`, {\n            method: 'DELETE',\n            headers: this._getheaders(),\n        }).then(this._getJson);\n    }\n\n    updateAvatar({avatar}) {\n        return fetch(`${this._basePath}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._getheaders(),\n            body: JSON.stringify({\n                avatar: avatar,\n            }),\n        }).then(this._getJson);\n    }\n}\n\nconst api = new Api('https://mesto.nomoreparties.co/v1/cohort-61', '3e94a288-591a-4578-ae34-fb38b084d81f'); \n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}