{"ast":null,"code":"var _jsxFileName = \"/Users/ivan/dev/mesto-react/src/components/EditProfilePopup.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { PopupWithForm } from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../context/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditProfilePopup(_ref) {\n  _s();\n  let {\n    onUpdateProfile,\n    closeAllPopups,\n    isOpen,\n    onClose\n  } = _ref;\n  const currentUser = React.useContext(CurrentUserContext);\n  const {\n    name,\n    about\n  } = currentUser;\n  const [profileName, setProfileName] = React.useState(\"\");\n  const [profileAbout, setProfileAbout] = React.useState(\"\");\n  function handleNameChange(evt) {\n    setProfileName(evt.target.value);\n  }\n  function handleAboutChange(evt) {\n    setProfileAbout(evt.target.value);\n  }\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onUpdateProfile({\n      name: profileName,\n      about: profileAbout\n    });\n  }\n  React.useEffect(() => {\n    if (isOpen) {\n      setProfileName(name);\n      setProfileAbout(about);\n    }\n  }, [isOpen, currentUser]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    isOpen: isOpen,\n    onClose: onClose,\n    onSubmit: handleSubmit,\n    title: \"Редактировать профиль\",\n    buttonText: \"Сохранить\",\n    name: \"profile\",\n    form: \"profileForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"popup__input popup__input_type_names\",\n      id: \"name-input\",\n      name: \"name\",\n      placeholder: \"\\u0418\\u043C\\u044F\",\n      minLength: \"2\",\n      maxLength: \"40\",\n      required: true,\n      value: profileName,\n      onChange: handleNameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__input-error name-input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"popup__input popup__input_type_description\",\n      id: \"description-input\",\n      name: \"about\",\n      placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      required: true,\n      value: profileAbout,\n      onChange: handleAboutChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__input-error description-input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(EditProfilePopup, \"lBoQRJvZChR6R8dXivTGg9vl7RY=\");\n_c = EditProfilePopup;\nexport default EditProfilePopup;\nvar _c;\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"names":["React","PopupWithForm","CurrentUserContext","jsxDEV","_jsxDEV","EditProfilePopup","_ref","_s","onUpdateProfile","closeAllPopups","isOpen","onClose","currentUser","useContext","name","about","profileName","setProfileName","useState","profileAbout","setProfileAbout","handleNameChange","evt","target","value","handleAboutChange","handleSubmit","preventDefault","useEffect","onSubmit","title","buttonText","form","children","type","className","id","placeholder","minLength","maxLength","required","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ivan/dev/mesto-react/src/components/EditProfilePopup.jsx"],"sourcesContent":["import React from \"react\";\nimport { PopupWithForm } from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../context/CurrentUserContext\";\n\nfunction EditProfilePopup({\n    onUpdateProfile,\n    closeAllPopups,\n    isOpen,\n    onClose\n}) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const { name, about } = currentUser;\n    const [profileName, setProfileName] = React.useState(\"\");\n    const [profileAbout, setProfileAbout] = React.useState(\"\");\n\n    function handleNameChange(evt) {\n        setProfileName(evt.target.value);\n    }\n\n    function handleAboutChange(evt) {\n        setProfileAbout(evt.target.value);\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault();\n\n        onUpdateProfile({\n            name: profileName,\n            about: profileAbout\n        })\n    }\n\n    React.useEffect(() => {\n        if (isOpen) {\n            setProfileName(name);\n            setProfileAbout(about);\n        }\n    }, [isOpen, currentUser]);\n\n\n\n    return (\n        <PopupWithForm\n            isOpen={isOpen}\n            onClose={onClose}\n            onSubmit={handleSubmit}\n            title={\"Редактировать профиль\"}\n            buttonText={\"Сохранить\"}\n            name={\"profile\"}\n            form={\"profileForm\"}\n        >\n            <input type=\"text\" className=\"popup__input popup__input_type_names\" id=\"name-input\" name=\"name\"\n                placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" required value={profileName} onChange={handleNameChange} />\n            <span className=\"popup__input-error name-input-error\"></span>\n            <input type=\"text\" className=\"popup__input popup__input_type_description\" id=\"description-input\"\n                name=\"about\" placeholder=\"Описание\" minLength=\"2\" maxLength=\"200\" required value={profileAbout} onChange={handleAboutChange} />\n            <span className=\"popup__input-error description-input-error\"></span>\n        </PopupWithForm>\n    )\n\n}\n\nexport default EditProfilePopup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}